{
  "data": {
    "repository": {
      "vulnerabilityAlerts": {
        "totalCount": 3,
        "nodes": [
          {
            "createdAt": "2020-10-13T14:05:11Z",
            "id": "MDI4OlJlcG9zaXRvcnlWdWxuZXJhYmlsaXR5QWxlcnQ0MDgyODM2MDY=",
            "state": "OPEN",
            "securityVulnerability": {
              "vulnerableVersionRange": "< 3.1.0",
              "package": {
                "name": "serialize-javascript"
              },
              "firstPatchedVersion": {
                "identifier": "3.1.0"
              },
              "severity": "HIGH",
              "advisory": {
                "description": "serialize-javascript prior to 3.1.0 allows remote attackers to inject arbitrary code via the function \"deleteFunctions\" within \"index.js\". \r\n\r\nAn object such as `{\"foo\": /1\"/, \"bar\": \"a\\\"@__R-<UID>-0__@\"}` was serialized as `{\"foo\": /1\"/, \"bar\": \"a\\/1\"/}`, which allows an attacker to escape the `bar` key. This requires the attacker to control the values of both `foo` and `bar` and guess the value of `<UID>`. The UID has a keyspace of approximately 4 billion making it a realistic network attack.\r\n\r\nThe following proof-of-concept calls `console.log()` when the running `eval()`:\r\n`eval('('+ serialize({\"foo\": /1\" + console.log(1)/i, \"bar\": '\"@__R-<UID>-0__@'}) + ')');`"
              }
            }
          },
          {
            "createdAt": "2021-05-25T15:16:23Z",
            "id": "MDI4OlJlcG9zaXRvcnlWdWxuZXJhYmlsaXR5QWxlcnQ3MTE1NjQwODQ=",
            "state": "OPEN",
            "securityVulnerability": {
              "vulnerableVersionRange": ">= 4.0.0, < 4.16.5",
              "package": {
                "name": "browserslist"
              },
              "firstPatchedVersion": {
                "identifier": "4.16.5"
              },
              "severity": "MODERATE",
              "advisory": {
                "description": "The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries."
              }
            }
          },
          {
            "createdAt": "2021-06-12T00:22:53Z",
            "id": "MDI4OlJlcG9zaXRvcnlWdWxuZXJhYmlsaXR5QWxlcnQ3NTQwMzU5MDI=",
            "state": "DISMISSED",
            "securityVulnerability": {
              "vulnerableVersionRange": "< 5.1.2",
              "package": {
                "name": "glob-parent"
              },
              "firstPatchedVersion": {
                "identifier": "5.1.2"
              },
              "severity": "HIGH",
              "advisory": {
                "description": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator."
              }
            }
          }
        ]
      }
    }
  }
}
